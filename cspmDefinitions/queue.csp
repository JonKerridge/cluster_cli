qMax = 2

UT = -1

channel put, get, receive : Int
channel finished: Bool

Queue(q) =
    put?v -> Queue(concat(<q, <v>>)) 
    []
    get?v -> 
    receive!head(q) -> 
    if head(q) == UT then
        QueueTerminate()
    else
        Queue(tail(q))


QueueTerminate() = finished ! True -> QueueTerminate()

a_Queue = {|put, get, receive|}

TestProc1() = 
    put!1 ->
    put!2 -> 
    get!0 -> receive?v ->
    put!UT ->
    get!0 -> receive?v ->
    get!0 -> receive?v -> TestProcEnd()

TestProcEnd() = finished ! True -> TestProcEnd()

TestSystem = finished!True -> TestSystem     

System1 = Queue(<>)[|a_Queue|] TestProc1()

assert (System1 \ {|put, get, receive|}) [T= TestSystem
assert (System1 \ {|put, get, receive|}) [F= TestSystem
assert (System1 \ {|put, get, receive|}) [FD= TestSystem
assert System1 :[deadlock free]
assert System1 :[divergence free]
assert System1 :[deterministic]

